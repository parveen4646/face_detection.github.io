apiVersion: v1
kind: Service
metadata:
  name: file-service
  namespace: default
spec:
  selector:
    app: file-service
  ports:
    - protocol: TCP
      port: 80
      targetPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: file-service
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: file-service
  template:
    metadata:
      labels:
        app: file-service
    spec:
      containers:
      - name: file-service
        image: "your-file-service-image:latest"
        ports:
        - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: face-detect-album-creation-model-1
  namespace: default
spec:
  replicas: 3
  selector:
    matchLabels:
      app: face-detect-album-creation-model-1
  template:
    metadata:
      labels:
        app: face-detect-album-creation-model-1
    spec:
      containers:
      - name: "face-detect-album-creation-model-1"
        image: "gcr.io/throuh-app-image-cluster/github.com/parveen4646/face_detect_album_creation_model:$SHORT_SHA"
        volumeMounts:
        - name: data-volume
          mountPath: "/app/data"  # Mount the volume at this path
      volumes:
      - name: data-volume
        emptyDir: {}
---
apiVersion: autoscaling/v2beta1
kind: HorizontalPodAutoscaler
metadata:
  name: face-detect-album-creation-model-1-hpa-m5i2
  namespace: default
spec:
  scaleTargetRef:
    kind: "Deployment"
    name: "face-detect-album-creation-model-1"
    apiVersion: "apps/v1"
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: "Resource"
    resource:
      name: "cpu"
      targetAverageUtilization: 80
